{"version":3,"file":"static/js/396.d6fbb812.chunk.js","mappings":"yOAEaA,EAAgBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4NAW1BC,EAAaH,EAAAA,GAAAA,KAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2GAOxBG,EAAcL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wMAW1BK,EAAcP,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8MAU1BO,EAAeT,EAAAA,GAAAA,OAAaU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,yP,sCC+BzC,EA3DoB,WAClB,IAAMS,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAEvBC,GAAWC,EAAAA,EAAAA,MAEjBC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAEE,OAAlBT,EAAIQ,EAAJR,KAAMU,EAAKF,EAALE,MACD,SAATV,EACFC,EAAQS,GACU,WAATV,GACTK,EAAUK,EAEd,EAiBA,OACEC,EAAAA,EAAAA,KAAChC,EAAa,CAAAiC,UACZC,EAAAA,EAAAA,MAAC9B,EAAU,CAAC+B,SAjBK,SAAAC,GACnBA,EAAMC,iBACN,IAAMhB,EAAOe,EAAMN,OAAOQ,SAASjB,KAAKU,MAClCN,EAASW,EAAMN,OAAOQ,SAASb,OAAOM,MACxCnB,EAAS2B,MAAK,SAAAC,GAAO,OAAIA,EAAQnB,OAASA,CAAI,IAChDoB,MAAM,GAADC,OAAIrB,EAAI,8BAIfN,GAAS4B,EAAAA,EAAAA,IAAiB,CAAEtB,KAAAA,EAAMI,OAAAA,KAClCH,EAAQ,IACRI,EAAU,IACVU,EAAMN,OAAOc,QACf,EAIuCX,SAAA,EACjCD,EAAAA,EAAAA,KAAC1B,EAAW,CAAA2B,SAAC,WACbD,EAAAA,EAAAA,KAACxB,EAAW,CACVqC,KAAK,OACLxB,KAAK,OACLyB,UAAQ,EACRC,YAAY,aACZhB,MAAOV,EACP2B,SAAUrB,KAEZK,EAAAA,EAAAA,KAAC1B,EAAW,CAAA2B,SAAC,aACbD,EAAAA,EAAAA,KAACxB,EAAW,CACVqC,KAAK,MACLxB,KAAK,SACLyB,UAAQ,EACRC,YAAY,qBACZhB,MAAON,EACPuB,SAAUrB,KAEZK,EAAAA,EAAAA,KAACtB,EAAY,CAACmC,KAAK,SAAQZ,SAAC,oBAIpC,C,+HCtEO,IAAMnB,EAAc,SAAAmC,GAAK,OAAIA,EAAMrC,SAASmB,KAAM,EAC5CmB,EAAY,SAAAD,GAAK,OAAIA,EAAME,OAAOC,KAAM,EACxCC,EAAgB,SAAAJ,GAAK,OAAIA,EAAMrC,SAAS0C,SAAU,EAClDC,EAAc,SAAAN,GAAK,OAAIA,EAAMrC,SAAS4C,KAAM,C","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","redux/selector.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  padding: 40px 20px;\n  background-color: rgba(17, 24, 39, 1);\n  color: rgba(243, 244, 246, 1);\n  width: 320px;\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  justify-content: flex-start;\n  color: rgba(156, 163, 175, 1);\n  margin-bottom: 4px;\n  margin-top: 20px;\n  font-size: 18px;\n  line-height: 1.6;\n  font-weight: 400;\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  border-radius: 10px;\n  border: 1px solid rgba(55, 65, 81, 1);\n  outline: 0;\n  background-color: rgba(17, 24, 39, 1);\n  padding: 12px 18px;\n  color: rgba(243, 244, 246, 1);\n`;\n\nexport const StyledButton = styled.button`\n  display: block;\n  width: 100%;\n  background-color: rgba(167, 139, 250, 1);\n  padding: 12px;\n  text-align: center;\n  color: rgba(17, 24, 39, 1);\n  border: none;\n  border-radius: 0.375rem;\n  font-weight: 600;\n  margin-top: 40px;\n`;\n","import React, { useState } from 'react';\n\nimport {\n  StyledWrapper,\n  StyledForm,\n  StyledLabel,\n  StyledInput,\n  StyledButton,\n} from './ContactForm.styled';\nimport { getContacts } from '../../redux/selector';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactsThunk } from '../../redux/operations';\n\nconst ContactForm = () => {\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContactsThunk({ name, number }));\n    setName('');\n    setNumber('');\n    event.target.reset();\n  };\n\n  return (\n    <StyledWrapper>\n      <StyledForm onSubmit={handleSubmit}>\n        <StyledLabel>Name </StyledLabel>\n        <StyledInput\n          type=\"text\"\n          name=\"name\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n        <StyledLabel>Number </StyledLabel>\n        <StyledInput\n          type=\"tel\"\n          name=\"number\"\n          required\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChange}\n        />\n        <StyledButton type=\"submit\">Add contact</StyledButton>\n      </StyledForm>\n    </StyledWrapper>\n  );\n};\n\nexport default ContactForm;\n","export const getContacts = state => state.contacts.value;\nexport const getFilter = state => state.filter.input;\nexport const SelectLoading = state => state.contacts.isLoading;\nexport const SelectError = state => state.contacts.error;\n"],"names":["StyledWrapper","styled","_templateObject","_taggedTemplateLiteral","StyledForm","_templateObject2","StyledLabel","_templateObject3","StyledInput","_templateObject4","StyledButton","_templateObject5","contacts","useSelector","getContacts","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","handleChange","e","_e$target","target","value","_jsx","children","_jsxs","onSubmit","event","preventDefault","elements","some","contact","alert","concat","addContactsThunk","reset","type","required","placeholder","onChange","state","getFilter","filter","input","SelectLoading","isLoading","SelectError","error"],"sourceRoot":""}
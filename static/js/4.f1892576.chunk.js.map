{"version":3,"file":"static/js/4.f1892576.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selector.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  padding: 40px 20px;\n  background-color: rgba(17, 24, 39, 1);\n  color: rgba(243, 244, 246, 1);\n  width: 320px;\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  justify-content: flex-start;\n  color: rgba(156, 163, 175, 1);\n  margin-bottom: 4px;\n  margin-top: 20px;\n  font-size: 18px;\n  line-height: 1.6;\n  font-weight: 400;\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  border-radius: 10px;\n  border: 1px solid rgba(55, 65, 81, 1);\n  outline: 0;\n  background-color: rgba(17, 24, 39, 1);\n  padding: 12px 18px;\n  color: rgba(243, 244, 246, 1);\n`;\n\nexport const StyledButton = styled.button`\n  display: block;\n  width: 100%;\n  background-color: rgba(167, 139, 250, 1);\n  padding: 12px;\n  text-align: center;\n  color: rgba(17, 24, 39, 1);\n  border: none;\n  border-radius: 0.375rem;\n  font-weight: 600;\n  margin-top: 40px;\n`;\n","export const getContacts = state => state.contacts.value;\nexport const getFilter = state => state.filter.input;\nexport const SelectLoading = state => state.contacts.isLoading;\nexport const SelectError = state => state.contacts.error;\n","import React, { useState } from 'react';\n\nimport {\n  StyledWrapper,\n  StyledForm,\n  StyledLabel,\n  StyledInput,\n  StyledButton,\n} from './ContactForm.styled';\nimport { getContacts } from '../../redux/contacts/selector';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactsThunk } from '../../redux/contacts/operations';\n\nconst ContactForm = () => {\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContactsThunk({ name, number }));\n    setName('');\n    setNumber('');\n    event.target.reset();\n  };\n\n  return (\n    <StyledWrapper>\n      <StyledForm onSubmit={handleSubmit}>\n        <StyledLabel>Name </StyledLabel>\n        <StyledInput\n          type=\"text\"\n          name=\"name\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n        <StyledLabel>Number </StyledLabel>\n        <StyledInput\n          type=\"tel\"\n          name=\"number\"\n          required\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChange}\n        />\n        <StyledButton type=\"submit\">Add contact</StyledButton>\n      </StyledForm>\n    </StyledWrapper>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul``;\n\nexport const StyledItem = styled.li`\n  display: flex;\n  gap: 20px;\n  justify-content: space-between;\n  margin: 20px 0 20px;\n`;\n\nexport const StyledButton = styled.button`\n  font-weight: bold;\n  letter-spacing: 0.1em;\n  border-radius: 1.1em;\n  border: none;\n  background-color: rgba(17, 24, 39, 1);\n  color: rgba(156, 163, 175, 1);\n  padding: 1em 2em;\n  transition: box-shadow ease-in-out 0.3s, background-color ease-in-out 0.1s,\n    letter-spacing ease-in-out 0.1s, transform ease-in-out 0.1s;\n  box-shadow: 3px 3px 6px #1c1c1c, -3px -3px 6px #262626;\n  &:hover {\n    box-shadow: 6px 6px 13px #121212, -6px -6px 13px #303030;\n    background-color: rgba(167, 139, 250, 1);\n    color: white;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StyledButton, StyledItem, StyledList } from './ContactList.styled';\nimport {\n  SelectError,\n  SelectLoading,\n  getContacts,\n  getFilter,\n} from '../../redux/contacts/selector';\nimport {\n  deleteContactThunk,\n  fetchContactsThunk,\n} from '../../redux/contacts/operations';\nimport { useEffect } from 'react';\n\nconst ContactList = ({ children }) => {\n  const loading = useSelector(SelectLoading);\n  const error = useSelector(SelectError);\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  const filteredContacts = contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filter?.toLowerCase() || '')\n  );\n\n  const handleDelete = id => {\n    dispatch(deleteContactThunk(id));\n  };\n\n  return (\n    <div>\n      {children}\n      <StyledList>\n        {filteredContacts.map((contact, id) => (\n          <StyledItem key={id}>\n            {contact.name}: {contact.number}\n            <StyledButton\n              type=\"button\"\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </StyledButton>\n          </StyledItem>\n        ))}\n      </StyledList>\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>{error}</h1>}\n    </div>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const StyledBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  border-radius: 10px;\n  padding: 40px 20px;\n  background-color: rgba(17, 24, 39, 1);\n  color: rgba(243, 244, 246, 1);\n  width: 320px;\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 18px;\n  line-height: 1.6;\n  font-weight: 400;\n  color: rgba(156, 163, 175, 1);\n  margin: 20px 0 4px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  border-radius: 10px;\n  border: 1px solid rgba(55, 65, 81, 1);\n  outline: 0;\n  background-color: rgba(17, 24, 39, 1);\n  padding: 12px 18px;\n  color: rgba(243, 244, 246, 1);\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StyledBox, StyledLabel, StyledInput } from './Filter.styled';\nimport { getFilter } from '../../redux/contacts/selector';\nimport { addFilter } from '../../redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(addFilter(event.target.value));\n  };\n  return (\n    <StyledBox>\n      <StyledLabel>Find contacts by Name </StyledLabel>\n      <StyledInput\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </StyledBox>\n  );\n};\n\nexport default Filter;\n","import ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <>\n        <StyledTitle>Phonebook</StyledTitle>\n        <ContactForm />\n        <StyledTitle>Contacts</StyledTitle>\n        <Filter />\n        <ContactList />\n      </>\n    </div>\n  );\n};\n\nexport default Contacts;\n\nconst StyledTitle = styled.h1`\n  margin: 30px 0;\n`;\n"],"names":["StyledWrapper","styled","_templateObject","_taggedTemplateLiteral","StyledForm","_templateObject2","StyledLabel","_templateObject3","StyledInput","_templateObject4","StyledButton","_templateObject5","getContacts","state","contacts","value","getFilter","filter","input","SelectLoading","isLoading","SelectError","error","useSelector","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","handleChange","e","_e$target","target","_jsx","children","_jsxs","onSubmit","event","preventDefault","elements","some","contact","alert","concat","addContactsThunk","reset","type","required","placeholder","onChange","StyledList","StyledItem","_ref","loading","useEffect","fetchContactsThunk","filteredContacts","toLowerCase","includes","map","id","onClick","deleteContactThunk","handleDelete","StyledBox","addFilter","_Fragment","StyledTitle","ContactForm","Filter","ContactList"],"sourceRoot":""}
{"version":3,"file":"static/js/655.024184b3.chunk.js","mappings":"2NAEaA,EAAaC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAEtBC,EAAaH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qGAOtBG,EAAeL,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oiB,sCCyCzC,EAzCoB,SAAHK,GAAsB,IAAhBC,EAAQD,EAARC,SACfC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,GACpBC,GAASJ,EAAAA,EAAAA,IAAYK,EAAAA,IACrBC,GAAWN,EAAAA,EAAAA,IAAYO,EAAAA,IAEvBC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACX,GAAG,CAACH,IAEJ,IAAMI,EAA2B,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUF,QAAO,SAAAS,GAAO,OAC/CA,EAAQC,KAAKC,cAAcC,UAAe,OAANZ,QAAM,IAANA,OAAM,EAANA,EAAQW,gBAAiB,GAAG,IAOlE,OACEE,EAAAA,EAAAA,MAAA,OAAAnB,SAAA,CACGA,GACDoB,EAAAA,EAAAA,KAAC7B,EAAU,CAAAS,SACRc,EAAiBO,KAAI,SAACN,EAASO,GAAE,OAChCH,EAAAA,EAAAA,MAACxB,EAAU,CAAAK,SAAA,CACRe,EAAQC,KAAK,KAAGD,EAAQQ,QACzBH,EAAAA,EAAAA,KAACvB,EAAY,CACX2B,KAAK,SACLC,QAAS,kBAbA,SAAAH,GACnBZ,GAASgB,EAAAA,EAAAA,IAAmBJ,GAC9B,CAW2BK,CAAaZ,EAAQO,GAAG,EAACtB,SACzC,aALcsB,EAQJ,MAGhBrB,IAAWmB,EAAAA,EAAAA,KAAA,MAAApB,SAAI,eACfI,IAASgB,EAAAA,EAAAA,KAAA,MAAApB,SAAKI,MAGrB,C,+HClDO,IAAMK,EAAc,SAAAmB,GAAK,OAAIA,EAAMpB,SAASqB,KAAM,EAC5CtB,EAAY,SAAAqB,GAAK,OAAIA,EAAMtB,OAAOwB,KAAM,EACxC3B,EAAgB,SAAAyB,GAAK,OAAIA,EAAMpB,SAASuB,SAAU,EAClD1B,EAAc,SAAAuB,GAAK,OAAIA,EAAMpB,SAASJ,KAAM,C","sources":["components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","redux/selector.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledList = styled.ul``;\n\nexport const StyledItem = styled.li`\n  display: flex;\n  gap: 20px;\n  justify-content: space-between;\n  margin: 20px 0 20px;\n`;\n\nexport const StyledButton = styled.button`\n  font-weight: bold;\n  letter-spacing: 0.1em;\n  border-radius: 1.1em;\n  border: none;\n  background-color: rgba(17, 24, 39, 1);\n  color: rgba(156, 163, 175, 1);\n  padding: 1em 2em;\n  transition: box-shadow ease-in-out 0.3s, background-color ease-in-out 0.1s,\n    letter-spacing ease-in-out 0.1s, transform ease-in-out 0.1s;\n  box-shadow: 3px 3px 6px #1c1c1c, -3px -3px 6px #262626;\n  &:hover {\n    box-shadow: 6px 6px 13px #121212, -6px -6px 13px #303030;\n    background-color: rgba(167, 139, 250, 1);\n    color: white;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StyledButton, StyledItem, StyledList } from './ContactList.styled';\nimport {\n  SelectError,\n  SelectLoading,\n  getContacts,\n  getFilter,\n} from '../../redux/selector';\nimport { deleteContactThunk, fetchContactsThunk } from '../../redux/operations';\nimport { useEffect } from 'react';\n\nconst ContactList = ({ children }) => {\n  const loading = useSelector(SelectLoading);\n  const error = useSelector(SelectError);\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  const filteredContacts = contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filter?.toLowerCase() || '')\n  );\n\n  const handleDelete = id => {\n    dispatch(deleteContactThunk(id));\n  };\n\n  return (\n    <div>\n      {children}\n      <StyledList>\n        {filteredContacts.map((contact, id) => (\n          <StyledItem key={id}>\n            {contact.name}: {contact.number}\n            <StyledButton\n              type=\"button\"\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </StyledButton>\n          </StyledItem>\n        ))}\n      </StyledList>\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>{error}</h1>}\n    </div>\n  );\n};\n\nexport default ContactList;\n","export const getContacts = state => state.contacts.value;\nexport const getFilter = state => state.filter.input;\nexport const SelectLoading = state => state.contacts.isLoading;\nexport const SelectError = state => state.contacts.error;\n"],"names":["StyledList","styled","_templateObject","_taggedTemplateLiteral","StyledItem","_templateObject2","StyledButton","_templateObject3","_ref","children","loading","useSelector","SelectLoading","error","SelectError","filter","getFilter","contacts","getContacts","dispatch","useDispatch","useEffect","fetchContactsThunk","filteredContacts","contact","name","toLowerCase","includes","_jsxs","_jsx","map","id","number","type","onClick","deleteContactThunk","handleDelete","state","value","input","isLoading"],"sourceRoot":""}